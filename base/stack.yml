stack: matti/base
version: 0.0.1
description: base
expose: web

variables:
  image_web:
    type: string
    default: user/image:0.0.1
    from:
      prompt:
  affinity_web:
    type: string
    default: label!=no-base-web
    from:
      prompt:
  deploy_strategy_web:
    type: string
    default: ha
    from:
      prompt:
  instances_web:
    only_if:
      - deploy_strategy_web: ha
    type: integer
    default: 1
    from:
      prompt:
  internal_port_web:
    type: integer
    default: 8000
  some_secret:
    type: string
    from:
      vault: "${STACK}_some_secret"
      random_string: 48
    to:
      vault: "${STACK}_some_secret"
  lb_service:
    type: string
    required: false
    from:
      service_link:
        prompt: Pick a loadbalancer
        image: kontena/lb
  lb_domain:
    only_if: lb_service
    type: string
    default: base.example.net
    from:
      prompt:
  lb_https_redirect:
    only_if: lb_service
    type: boolean
    from:
      prompt:

services:
  web:
    image: {{ image_web }}
    affinity:
      - {{ affinity_web }}
    stateful: true
    instances: {{ instances_web }}
    deploy:
      strategy: ha
      wait_for_port: {{ internal_port_web }}
      interval: 1d
    volumes:
      - /data
    environment:
    # {% if lb_service %}
      - KONTENA_LB_INTERNAL_PORT={{ internal_port_web }}
      - KONTENA_LB_VIRTUAL_HOSTS={{ lb_domain }}
      # {% if lb_https_redirect %}
      - KONTENA_LB_CUSTOM_SETTINGS=redirect scheme https if !{ ssl_fc }
      # {% endif %}
    # {% endif %}
    health_check:
      protocol: http
      port: {{ internal_port_web }}
      uri: /
      interval: 60
      initial_delay: 60
      timeout: 2
    hooks:
      post_start:
        - cmd: /entrypoint.sh upgrade --noinput || /entrypoint.sh upgrade --noinput
          name: migrations
          instances: 1
          oneshot: true
    links:
    # {% if lb_service %}
      - {{ lb_service }}
    # {% endif %}
    depends_on:
      - something
