stack: matti/sentry
version: 0.0.1
description: Sentry
# TODO:
# - removing this stack with --force always hangs when first run?
# - how to share common envs?

expose: web

variables:
  sentry_image:
    type: string
    default: sentry:8.7.0
    from:
      prompt:
  lb_service:
    type: string
    from:
      service_link:
        prompt: Pick a loadbalancer
        image: kontena/lb
  lb_domain:
    type: string
    default: sentry.example.net
    from:
      prompt:
  sentry_superuser_email:
    type: string
    default: admin@example.com
    from:
      prompt:
  sentry_superuser_password:
    type: string
    default:
    from:
      prompt:
  sentry_secret_key:
    type: string
    from:
      vault: ${STACK}_SENTRY_SECRET_KEY
      random_string: 50

services:
  smtp:
    image: tianon/exim4

  memcached:
    image: memcached:1.4

  redis:
    image: redis:3.2-alpine

  postgres:
    image: postgres:9.5-alpine
    stateful: yes
    volumes:
      - /var/lib/postgresql

  web:
    image: {{ sentry_image }}
    volumes:
      - /var/lib/sentry
    environment:
      - SENTRY_SECRET_KEY={{ sentry_secret_key }}
      - SENTRY_MEMCACHED_HOST=memcached
      - SENTRY_REDIS_HOST=redis
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_EMAIL_HOST=smtp
      - KONTENA_LB_VIRTUAL_HOSTS={{ lb_domain }}
      - KONTENA_LB_INTERNAL_PORT=9000
      - KONTENA_LB_CUSTOM_SETTINGS=redirect scheme https if !{ ssl_fc }
    depends_on:
      - smtp
      - memcached
      - redis
      - postgres
    health_check:
      protocol: http
      port: 9000
      interval: 60
      uri: /auth/login/sentry/  # without that trailing slash the response is 302
      initial_delay: 120
      timeout: 2
    hooks:
      post_start:
        - cmd: /entrypoint.sh upgrade --noinput || /entrypoint.sh upgrade --noinput
          name: migrations
          instances: 1
          oneshot: true
        - cmd: '/entrypoint.sh createuser --email={{ sentry_superuser_email }} --password={{ sentry_superuser_password }} --superuser --no-input'
          name: seed default user
          instances: 1
          oneshot: true
    links:
      - {{ lb_service }}

  cron:
    image: {{ sentry_image }}
    command: run cron
    environment:
      - SENTRY_SECRET_KEY={{ sentry_secret_key }}
      - SENTRY_MEMCACHED_HOST=memcached
      - SENTRY_REDIS_HOST=redis
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_EMAIL_HOST=smtp
    depends_on:
      - web

  worker:
    image: {{ sentry_image }}
    command: run worker
    environment:
      - SENTRY_SECRET_KEY={{ sentry_secret_key }}
      - SENTRY_MEMCACHED_HOST=memcached
      - SENTRY_REDIS_HOST=redis
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_EMAIL_HOST=smtp
    depends_on:
      - web
